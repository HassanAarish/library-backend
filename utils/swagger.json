{
  "openapi": "3.0.3",
  "info": {
    "title": "Library Management System",
    "description": "These are all checked and workin API's for the project.",
    "serviceProvidedBy": "https://apexwebstudios.net/",
    "contact": {
      "email": "info@apexwebstudios.net"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "This is a service in development mode",
      "_comments": "All end points from indexRoutes.js should be replaced at the end of the URL."
    }
  ],
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Book": {
        "type": "object",
        "required": [
          "Authorization[]",
          "id",
          "title",
          "category",
          "author",
          "price",
          "isRented"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The auto-generated id of the book"
          },
          "title": {
            "type": "string",
            "description": "The title of your book"
          },
          "category": {
            "type": "string",
            "description": "The category of your book"
          },
          "author": {
            "type": "string",
            "description": "The author of the book"
          },
          "price": {
            "type": "number",
            "description": "The price of the book"
          },
          "isRented": {
            "type": "boolean",
            "description": "Whether the book is rented or not"
          }
        },
        "example": {
          "id": "d5fE_asz",
          "title": "The New Turing Omnibus",
          "category": "Anonymous",
          "author": "Anonymous",
          "price": 10,
          "isRented": false
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The unique identifier for the order"
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user who placed the order"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemId": {
                  "type": "string",
                  "description": "The ID of the item"
                },
                "quantity": {
                  "type": "integer",
                  "description": "The quantity of the item ordered"
                }
              }
            },
            "description": "The list of items in the order"
          },
          "totalAmount": {
            "type": "number",
            "description": "The total amount of the order"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date and time when the order was created"
          }
        },
        "example": {
          "orderId": "abc123",
          "userId": "user123",
          "items": [
            {
              "itemId": "item1",
              "quantity": 2
            },
            {
              "itemId": "item2",
              "quantity": 1
            }
          ],
          "totalAmount": 25.5,
          "createdAt": "2024-06-27T12:00:00Z"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The username of the user"
          },
          "password": {
            "type": "string",
            "description": "The password of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email address of the user"
          }
        },
        "example": {
          "username": "john_doe",
          "password": "password123",
          "email": "john.doe@example.com"
        }
      },
      "AdminUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The username of the admin user"
          },
          "password": {
            "type": "string",
            "description": "The password of the admin user"
          },
          "role": {
            "type": "string",
            "description": "The role of the admin user"
          }
        },
        "example": {
          "username": "admin",
          "password": "admin123",
          "role": "superuser"
        }
      }
    }
  },
  "tags": [
    {
      "name": "User management system",
      "description": "API endpoints for managing books"
    }
  ],
  "paths": {
    "/user/all": {
      "get": {
        "summary": "Lists all the books",
        "tags": ["User Management System"],
        "responses": {
          "200": {
            "description": "The list of all books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/search": {
      "get": {
        "summary": "Search any keyword",
        "tags": ["User Management System"],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The category of books to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Here are your results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No results found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/genre/{category}": {
      "get": {
        "summary": "Get books by category",
        "tags": ["User Management System"],
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The category of books to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of books in the specified category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No books found in the specified category"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/user-order": {
      "get": {
        "summary": "Get user orders",
        "tags": ["User Management System"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of orders belonging to the current user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, user not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/new-order": {
      "post": {
        "summary": "Create a new order",
        "tags": ["User Management System"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, user not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "summary": "User signup",
        "tags": ["User Management System"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed up successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "User login",
        "tags": ["User Management System"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Unauthorized, invalid credentials"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/admin-signup": {
      "post": {
        "summary": "Admin signup",
        "tags": ["Admin Management System"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin user signed up successfully"
          },
          "401": {
            "description": "Unauthorized, user not authenticated or not an admin"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Get a book by ID",
        "tags": ["User Management System"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the book to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "The book retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/admin/add-new-book": {
      "post": {
        "summary": "Create a new book",
        "tags": ["Admin Management System"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, user not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/admin/all-users": {
      "get": {
        "summary": "Get all user profiles (admin only)",
        "tags": ["Admin Management System"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of user profiles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, user not authenticated or not an admin"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/admin/delete-all": {
      "post": {
        "summary": "Delete all books in the database",
        "tags": ["Admin Management System"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "All books deleted successfully"
          },
          "401": {
            "description": "Unauthorized, user not authenticated"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/admin/admin-signup": {
      "post": {
        "summary": "Admin signup",
        "tags": ["Admin Management System"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin user signed up successfully"
          },
          "401": {
            "description": "Unauthorized, user not authenticated or not an admin"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/admin/{id}": {
      "put": {
        "summary": "Update a book by ID",
        "tags": ["Admin Management System"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the book to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The book updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Book"
                }
              }
            }
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a book by ID",
        "tags": ["Admin Management System"],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the book to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  }
}
